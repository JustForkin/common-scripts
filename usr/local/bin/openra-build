#!/bin/bash
cd $GHUBM/packaging/OpenRA || return
# Check for git
if ! command -v git > /dev/null 2>&1; then
	zenity --error --text="git not found, please add it to system path, presumably after installing it." --title="Error!" && return
fi
# Check for make
if ! command -v make > /dev/null 2>&1; then
	zenity --error --text="make is missing, please add it to system path, command -v will likely be after you install it." --title="Error!" && return
fi

# Check for mono
if ! command -v mono > /dev/null 2>&1; then
	zenity --error --text="mono is missing, please add it to system path, command -v will likely be after you install it." --title="Error!" && return
fi

# Check for Lua 5.1 libraries
if ! find /usr/lib* /lib* -name "liblua*5*1*.so*" -quit > /dev/null 2>&1 ; then
	zenity --error --text="Lua 5.1 libs are not found in /usr/lib/x86_64-linux-gnu, /lib64 or /usr/lib64. If they are installed somewhere else, but in LD_LIBRARY_PATH, feel free to ignore this warning, otherwise install these libraries please" --title="Error!" && return
fi

if ! find /lib* /usr/lib* -name "libopenal*" -quit > /dev/null 2>&1 ; then
	zenity --error --text="OpenAL libraries not found, please install them." --title="Error!" && return
fi

if ! find /lib* /usr/lib* -name "libSDL2*.so*" -quit > /dev/null 2>&1 ; then
	zenity --error --text="SDL2 libraries not found, please install them." --title="Error!" && return
fi
#printf "Updating my OpenRA fork...\n"

#printf "Updating my OpenRA fork...\n"
#git pull upstream bleed -q

#printf "Determining the number of the latest bleed commit..."
#commc=$(git rev-list --branches bleed --count)
#printf "${commc}.\n"

#commn=$(octave --eval "$commc+1" | sed "s/ans =\s*//g")
#printf "Next commit's number will be ${commn}.\n"

#printf "Let's sed to replace the current version listed in mods/*/mod.yaml and VERSION to the $commn.\n"
#sed -i -e "s/Version: [0-9]*/Version: ${commn}/g" mods/*/mod.yaml
#sed -i -e "s/[0-9]*/${commn}/g" VERSION

#printf "Done. Now run make clean to remove build artefacts so we can commit these changes...\n"
#make clean

#printf "Time to #do some committng...\n"
#git add --all
#git commit -m "Upstream update"
#printf "Tagging and pushing new release $commn...\n"
#git tag $commn
#git push origin $commn
#printf "Pushing to bleed branch...\n"

cd /home/fusion809/GitHub/others/OpenRA || return
commco=$(git rev-list --branches bleed --count)
export DEST=$HOME/.local
VERSION=$(cat $DEST/lib/openra/VERSION)

if [[ $VERSION == "bleed-$commco" ]]; then
	printf "At the latest commit already mate!\n" ; return
fi

if ! [[ -f /usr/bin/openra-ra ]] || [[ -f /usr/lib/openra/method ]] ; then
	zenity --error --text="OpenRA is going to be updated to commit $commco" --title="Warning!"
	if ! [[ $1 == "install" ]]; then
		make clean
	fi
	make version VERSION="bleed-$commco"
	echo "Manually build" | tee -a  $DEST/lib/openra/method
	make
	make prefix=/ install-core DESTDIR=$DEST
	make prefix=/ install-linux-shortcuts DESTDIR=$DEST
	make prefix=/ install-linux-mime DESTDIR=$DEST
	make prefix=/ install-man-page DESTDIR=$DEST
	rm $DEST/lib/openra/*.sh
	git stash
fi
